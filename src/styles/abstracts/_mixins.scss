// _mixins.scss
// Mixins reutilizables para layout en Miaudoro üêæ

///
/// Crea un contenedor flex personalizado.
///
/// @param {String} $direction - Direcci√≥n del eje principal (row | column)
/// @param {String} $justify - Justificaci√≥n en eje principal (flex-start | center | space-between | ...)
/// @param {String} $align - Alineaci√≥n en eje cruzado (stretch | center | flex-start | ...)
/// @param {String} $wrap - Si los elementos se envuelven (nowrap | wrap | wrap-reverse)
///
/// üìå Uso recomendado:
/// @include flex($justify: center, $align: center);
///
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

///
/// Centra contenido tanto vertical como horizontalmente.
///
/// Equivalente a: @include flex(row, center, center)
///
@mixin flex-center {
  @include flex($justify: center, $align: center);
}

///
/// Centra contenido verticalmente en un contenedor horizontal (row).
///
@mixin flex-center-y {
  @include flex($justify: flex-start, $align: center);
}

///
/// Centra contenido horizontalmente en un contenedor horizontal (row).
///
@mixin flex-center-x {
  @include flex($justify: center, $align: flex-start);
}

///
/// Centra contenido en una columna (vertical + horizontal).
///
@mixin flex-column-center {
  @include flex($direction: column, $justify: center, $align: center);
}

///
/// Flex responsive: horizontal en escritorio, columna en mobile.
///
/// @param {Number} $breakpoint - Breakpoint para hacer el cambio (por defecto: 768px)
///
@mixin flex-responsive($breakpoint: 768px) {
  @include flex($direction: row, $justify: space-between, $align: center, $wrap: wrap);

  @media (max-width: $breakpoint) {
    flex-direction: column;
    align-items: stretch;
  }
}
